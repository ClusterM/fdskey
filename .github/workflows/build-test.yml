name: Build, test, upload

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: [ubuntu-latest]
    env:
      APP_NAME: fdskey
      OUT_DIR: fdskey
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install compiler
      run: sudo apt-get install gcc-arm-none-eabi
    - name: Build bootloader
      run: |
        mkdir -p ${{ env.OUT_DIR }}
        make -C FdsKey_bootloader/interim/ OBJCOPY_BIN=../../${{ env.OUT_DIR }}/${{ env.APP_NAME }}_bootloader.bin
    - name: Build firmware
      run: |
        mkdir -p ${{ env.OUT_DIR }}
        make -C FdsKey/interim/ OBJCOPY_BIN=../../${{ env.OUT_DIR }}/${{ env.APP_NAME }}.bin
    - name: Archive
      working-directory: ${{ env.OUT_DIR }}
      run: |
        tar -czvf ../${{ env.APP_NAME }}.tar.gz *
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.APP_NAME }}
        path: ${{ env.OUT_DIR }}

  upload-to-pages:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
    - name: Move files to the root
      run: find -mindepth 2 -exec mv {} . \;
    - name: Remove empty directories
      run: find -mindepth 1 -type d -delete
    - name: Generate index.html
      run: "(echo \"<html><head><title>FDSKey</title></head><body>Updated: `date`<br/><br/>\" ; for file in *.bin ; do echo \"<a href='$file'>$file</a><br/>(MD5: `md5sub $file`)</br></br>\" ; done ; echo \"</body></html>\") > index.html"
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: '.'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1
